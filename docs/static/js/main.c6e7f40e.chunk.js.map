{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAqCeA,EAlCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAmBzC,OACE,sBAAMC,SAba,SAACC,GACpBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAI7BR,GAAc,SAACS,GAAD,OAAQP,GAAR,mBAAuBO,OACrCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SArBmB,SAACP,GACxBF,EAAcE,EAAEQ,OAAOF,a,+BCPdG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,iDACiCC,UACpDH,GAFmB,+DAIFI,MAAMF,GAJJ,cAIfG,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,IAC7B,MAAO,CACLC,GAAE,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAKC,GACTC,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKE,MACZV,IAAG,OAAEQ,QAAF,IAAEA,GAAF,UAAEA,EAAKG,cAAP,iBAAE,EAAaC,wBAAf,aAAE,EAA+BZ,QAXnB,kBAedM,GAfc,4CAAH,sDCaLO,EAXK,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGhC,OAFAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAGvB,sBAAKgB,UAAU,yCAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,MAFuDD,ICuClDU,EAzCC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACR1B,EAAQC,GAAU0B,MAAK,SAACC,GACtBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDJ0BK,CAAa5B,GAAjCa,EAVmB,EAUxBN,KAAae,EAVW,EAUXA,QAKrB,OAHAN,QAAQC,IAAIJ,GACZG,QAAQC,IAAIK,GAGV,qCACE,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAWlDsB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEIL,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAA+BA,GAAbA,EAAImB,cETnBC,EAxBM,WAAO,IAAD,EACW5C,mBAAS,CAAC,cADrB,mBAClB6C,EADkB,KACN9C,EADM,KASzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BACG8C,EAAWtB,KAAI,SAACT,EAAUgC,GAAX,OACd,cAAC,EAAD,CAAiBhC,SAAUA,GAAbgC,Y,MChBxBC,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.c6e7f40e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useState } from \"react\";\n\nconst AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const handleInputValue = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (inputValue.trim().length > 2) {\n      // setCategories((c) => [...c, inputValue]);\n      // setCategories( cats => [ inputValue, ...cats, ] );\n      // Ver por que no me funciona de esta forma\n      setCategories((c) => [inputValue, ...c]);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input \n        type=\"text\" \n        value={inputValue} \n        onChange={handleInputValue} \n      />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\n    category\n  )}&limit=10&api_key=TTuCWRFI5dJ2N8uYSRvomNWWDvUtPbv6`;\n  const resp = await fetch(url);\n  const { data } = await resp.json();\n\n  const gifs = data.map((img) => {\n    return {\n      id: img?.id,\n      title: img?.title,\n      url: img?.images?.downsized_medium?.url,\n    };\n  });\n\n  return gifs;\n};","import React from \"react\";\n\nconst GifGridItem = ({ id, title, url }) => {\n  console.log({ id, title, url });\n\n  return (\n    <div className=\"card animate__animated animate__fadeIn\" key={id}>\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n};\n\nexport default GifGridItem;\n","import React from \"react\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GifGridItem from \"./GifGridItem\";\n\nconst GifGrid = ({ category }) => {\n  // const [images, setImages] = useState([]);\n\n  // useEffect(() => {\n  //   // getGifs(category).then( imgs => setImages(imgs));\n  //   getGifs(category).then(setImages);\n  // }, [category]);\n\n  // // getGifs();\n\n  const { data:images, loading } = useFetchGifs(category);\n\n  console.log(images);\n  console.log(loading);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n      {/* <div className=\"card-grid\"> */}\n      {/* {images.map(({ id, title }) => (\n        <li key={id}>{title}</li>\n      ))} */}\n\n      {/* {images.map((img) => (\n          <GifGridItem key={img.key} {...img} />\n        ))} */}\n      {/* </div> */}\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n\n      <div className=\"card-grid\">\n        {\n          images.map( img => (\n            <GifGridItem key={img.key} {...img} />\n          ))\n        }\n      </div>\n    </>\n  );\n};\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n\n  useEffect(() => {\n    getGifs(category).then((imgs) => {\n      setState({\n        data: imgs,\n        loading: false,\n      });\n    });\n  }, [category]);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n\nconst GifExpertApp = () => {\n  const [categories, setCategories] = useState([\"One Punch\"]);\n\n  // const handleAdd = () => {\n  //   // setCategories(c => c.concat('Death Note'));\n  //   setCategories(c => [...c, 'Death Note']);\n  //   // setCategories(['Death Note', ...categories]);\n  // };\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <hr />\n\n      <ol>\n        {categories.map((category, i) => (\n          <GifGrid key={i} category={category} />\n        ))}\n      </ol>\n    </>\n  );\n};\n\nexport default GifExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}